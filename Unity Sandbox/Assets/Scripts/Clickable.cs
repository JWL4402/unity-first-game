using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.EventSystems;

/// <summary>
/// A script that allows the player to click on a GameObject to move it around with their mouse, then
/// click again to let go of it. All Game Objects involved must have a BoxCollider (but a RigidBody is not required)
/// </summary>
public class Clickable : MonoBehaviour, IPointerDownHandler
{
    /// <summary>
    /// The GameObject that the Clickable object can be dropped on to be destroyed.
    /// If a clickable object is generated by a generator, it will inherit the same Trash_Object,
    ///     or the generator itself, if there is no Trash Object
    /// ! THIS OBJECT SHOULD BE ON A LOWER SORTING LAYER THAN THE CLICKABLE OBJECT !
    /// </summary>
    public GameObject Trash_Object;
    /// <summary>
    /// If true, the object will create a clone to be moved upon being clicked, rather than moving itself.
    /// </summary>
    public bool generator;
    
    private bool selected = false;

    /// <summary>
    /// Creates or finds a Raycaster used to detect what is clicked.
    /// </summary>
    private void AddPhysicsRaycaster()
    {
        Physics2DRaycaster raycast = FindObjectOfType<Physics2DRaycaster>();
        if (raycast == null)
        {
            Camera.main.gameObject.AddComponent<Physics2DRaycaster>();
        }
    }

    /// <summary>
    /// Generates a clone of the Clickable object to be moved. Used for Generator functionality.
    /// </summary>
    private void GenerateClone()
    {
        GameObject clone = Object.Instantiate(gameObject, transform.position, Quaternion.identity);
        
        Clickable script = clone.GetComponent<Clickable>();
        if (script == null) { Debug.LogError("Generator generated an object without script."); }
        // if it's copy of object with this script, should have this script

        script.generator = false;
        script.selected = true;

        script.Trash_Object = Trash_Object != null ? Trash_Object : gameObject;
    }
    
    /// <summary>
    /// Trashes an object if it is dropped onto its Trash Object.
    /// </summary>
    /// <param name="event_pos">The 2D position of the click.</param>
    /// <returns>True if trashed, false otherwise.</returns>
    private bool CheckTrashed(Vector2 event_pos)
    {
        if (Trash_Object == null) { return false; }

        Vector3 click_pos = Camera.main.ScreenToWorldPoint(event_pos);
        RaycastHit2D[] ray_hits = Physics2D.GetRayIntersectionAll(new Ray(click_pos, transform.forward));

        foreach (RaycastHit2D hit in ray_hits)
        {
            if (hit.collider.gameObject == Trash_Object)
            {
                Destroy(gameObject);
                return true;
            }
        }
        return false;
    }

    // FOR THE OnPointerDown FUNCTION TO WORK ;
    // There must be an EventSystems component somewhere in the project
    //      (does not have to be on the thing with the Clickable script)
    // On this EventSystems object, add in a "StandaloneInputModule"
    public void OnPointerDown(PointerEventData eventData)
    {
        if (!generator)
        {
            if (CheckTrashed(eventData.position)) {  return; }
            selected = selected ? false : true; // invert value
        }
        else
        {
            GenerateClone();
        }
    }

    void Start()
    {
        AddPhysicsRaycaster();
    }

    void Update()
    {
        if (!selected) { return; }

        // turns 3D mousePosition into a 2D Coordinate
        Vector2 mouse_pos = Camera.main.ScreenToWorldPoint(Input.mousePosition);
        gameObject.transform.position = mouse_pos;
    }
}
